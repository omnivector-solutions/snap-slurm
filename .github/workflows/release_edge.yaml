name: ReleaseEdge
  
on:
  push:
    branch:
      - develop

jobs:
  build-snap:
    name: "Build the slurm snap"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2

      - name: "Install Snapcraft"
        uses: samuelmeuli/action-snapcraft@v1
        with:
          use_lxd: true

      - name: "Build the snap"
        run: sg lxd -c 'snapcraft --use-lxd'

      - name: "Store snap filename for later use"
        if: ${{ success() }}
        id: vars
        run: |
          echo "::set-output name=snap_file::$(ls *.snap)"
          echo "::set-output name=snap_hash::${{hashFiles('*.snap')}}"

      - name: Cache built snap
        if: ${{ success() }}
        id: slurm-snap
        uses: actions/cache@v2
        with:
          path: ${{ steps.vars.outputs.snap_file }}
          key: slurm-snap-${{ hashFiles('*.snap') }}

    outputs:
      snap_file: ${{ steps.vars.outputs.snap_file }}
      snap_hash: ${{ steps.vars.outputs.snap_hash }}

  release-edge: 
    name: "Release the slurm snap to edge"
    runs-on: "ubuntu-latest"
    needs: build-snap
    steps:
      - name: "Restore the slurm snap"
        uses: actions/cache@v2
        with:
          path: ${{needs.build-snap.outputs.snap_file}}
          key: slurm-snap-${{ needs.build-snap.outputs.snap_hash }}

      - name: "Install Snapcraft"
        uses: samuelmeuli/action-snapcraft@v1
        with:
          snapcraft_token: ${{ secrets.snapcraft_token }}

      - name: "Push snap to snapstore edge"
        run: |
          snapcraft push ${{needs.build-snap.outputs.snap_file}} --release edge
